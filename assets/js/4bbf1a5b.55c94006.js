"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[61207],{3905:function(e,t,a){a.d(t,{Zo:function(){return p},kt:function(){return m}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),d=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=d(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(a),f=n,m=c["".concat(l,".").concat(f)]||c[f]||u[f]||i;return a?r.createElement(m,o(o({ref:t},p),{},{components:a})):r.createElement(m,o({ref:t},p))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:n,o[1]=s;for(var d=2;d<i;d++)o[d]=a[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},32579:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return c}});var r=a(87462),n=a(63366),i=(a(67294),a(3905)),o=["components"],s={id:"core-types.idatastoreorm",title:"IDataStoreORM interface",hide_title:!0},l=void 0,d={unversionedId:"api/core-types.idatastoreorm",id:"api/core-types.idatastoreorm",title:"IDataStoreORM interface",description:"IDataStoreORM interface",source:"@site/docs/api/core-types.idatastoreorm.md",sourceDirName:"api",slug:"/api/core-types.idatastoreorm",permalink:"/docs/api/core-types.idatastoreorm",draft:!1,tags:[],version:"current",frontMatter:{id:"core-types.idatastoreorm",title:"IDataStoreORM interface",hide_title:!0}},p={},c=[{value:"IDataStoreORM interface",id:"idatastoreorm-interface",level:2},{value:"Methods",id:"methods",level:2}],u={toc:c},f="wrapper";function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)(f,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"idatastoreorm-interface"},"IDataStoreORM interface"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,i.kt)("p",null,"This is the default query interface for the credential data stored by a Gimly agent."),(0,i.kt)("p",null,"Plugins implementing this interface are expected to implement this simple query functionality to filter the data that was saved using ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/core-types.idatastore"},"IDataStore"),"."),(0,i.kt)("p",null,"If this interface is implemented by a different plugin than ",(0,i.kt)("a",{parentName:"p",href:"/docs/api/core-types.idatastore"},"IDataStore"),", then both plugins MUST use the same media for data storage."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IDataStoreORM extends IPluginMethodMap\n")),(0,i.kt)("b",null,"Extends:")," [IPluginMethodMap](/docs/api/core-types.ipluginmethodmap)",(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Method"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetidentifiers"},"dataStoreORMGetIdentifiers(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Tries to obtain a list of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iidentifier"},"IIdentifiers")," that match the given filter. The origin of these identifiers is from any credential / presentation or message that was successfully processed by this agent."),(0,i.kt)("p",null,"If the same database is used for implementations of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/did-manager.abstractdidstore"},"AbstractDIDStore"),", then these identifiers can also come from ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanager.didmanagercreate"},"didManagerCreate")," or ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanager.didmanagerimport"},"didManagerImport")," operations."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetidentifierscount"},"dataStoreORMGetIdentifiersCount(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Tries to obtain a count of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iidentifier"},"IIdentifiers")," that match the given filter. The origin of these identifiers is from any credential / presentation or message that was successfully processed by this agent."),(0,i.kt)("p",null,"If the same database is used for implementations of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/did-manager.abstractdidstore"},"AbstractDIDStore"),", then these identifiers can also come from ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanager.didmanagercreate"},"didManagerCreate")," or ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanager.didmanagerimport"},"didManagerImport")," operations."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetmessages"},"dataStoreORMGetMessages(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a list of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.imessage"},"IMessage"),"s that match the given filter. These are messages that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresavemessage"},"dataStoreSaveMessage"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetmessagescount"},"dataStoreORMGetMessagesCount(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a count of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.imessage"},"IMessage"),"s that match the given filter. These are messages that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresavemessage"},"dataStoreSaveMessage"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablecredentials"},"dataStoreORMGetVerifiableCredentials(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a list of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablecredential"},"UniqueVerifiableCredential"),"s that match the given filter based on the top level properties of a credential."),(0,i.kt)("p",null,"These are VerifiableCredentials that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablecredential"},"dataStoreSaveVerifiableCredential"),"."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablecredentialsbyclaims"},"dataStoreORMGetVerifiableCredentialsByClaims(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a list of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablecredential"},"UniqueVerifiableCredential"),"s that match the given filter based on the claims they contain."),(0,i.kt)("p",null,"These are VerifiableCredentials that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablecredential"},"dataStoreSaveVerifiableCredential"),"."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablecredentialsbyclaimscount"},"dataStoreORMGetVerifiableCredentialsByClaimsCount(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a count of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablecredential"},"UniqueVerifiableCredential"),"s that match the given filter based on the claims they contain."),(0,i.kt)("p",null,"These are VerifiableCredentials that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablecredential"},"dataStoreSaveVerifiableCredential"),"."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablecredentialscount"},"dataStoreORMGetVerifiableCredentialsCount(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a count of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablecredential"},"UniqueVerifiableCredential"),"s that match the given filter based on the top level properties of a credential."),(0,i.kt)("p",null,"These are VerifiableCredentials that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablecredential"},"dataStoreSaveVerifiableCredential"),"."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablepresentations"},"dataStoreORMGetVerifiablePresentations(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a list of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablepresentation"},"UniqueVerifiablePresentation"),"s that match the given filter based on the top level properties of a presentation."),(0,i.kt)("p",null,"These are ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.verifiablepresentation"},"VerifiablePresentation"),"s that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablepresentation"},"dataStoreSaveVerifiablePresentation"),"."))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastoreorm.datastoreormgetverifiablepresentationscount"},"dataStoreORMGetVerifiablePresentationsCount(args, context)")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("b",null,(0,i.kt)("i",null,"(BETA)"))," Returns a count of ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.uniqueverifiablepresentation"},"UniqueVerifiablePresentation"),"s that match the given filter based on the top level properties of a presentation."),(0,i.kt)("p",null,"These are ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.verifiablepresentation"},"VerifiablePresentation"),"s that were stored using ",(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.idatastore.datastoresaveverifiablepresentation"},"dataStoreSaveVerifiablePresentation"),"."))))))}m.isMDXComponent=!0}}]);