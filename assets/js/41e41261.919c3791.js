"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[26743],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),d=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(o.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),s=d(r),f=i,m=s["".concat(o,".").concat(f)]||s[f]||u[f]||a;return r?n.createElement(m,l(l({ref:t},p),{},{components:r})):n.createElement(m,l({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=f;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c[s]="string"==typeof e?e:i,l[1]=c;for(var d=2;d<a;d++)l[d]=r[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},63689:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return s}});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),l=["components"],c={id:"credential-ld.icreateverifiablecredentialldargs.credential",title:"ICreateVerifiableCredentialLDArgs.credential property",hide_title:!0},o=void 0,d={unversionedId:"api/credential-ld.icreateverifiablecredentialldargs.credential",id:"api/credential-ld.icreateverifiablecredentialldargs.credential",title:"ICreateVerifiableCredentialLDArgs.credential property",description:"ICreateVerifiableCredentialLDArgs.credential property",source:"@site/docs/api/credential-ld.icreateverifiablecredentialldargs.credential.md",sourceDirName:"api",slug:"/api/credential-ld.icreateverifiablecredentialldargs.credential",permalink:"/docs/api/credential-ld.icreateverifiablecredentialldargs.credential",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/credential-ld.icreateverifiablecredentialldargs.credential.md",tags:[],version:"current",frontMatter:{id:"credential-ld.icreateverifiablecredentialldargs.credential",title:"ICreateVerifiableCredentialLDArgs.credential property",hide_title:!0}},p={},s=[{value:"ICreateVerifiableCredentialLDArgs.credential property",id:"icreateverifiablecredentialldargscredential-property",level:2}],u={toc:s},f="wrapper";function m(e){var t=e.components,r=(0,i.Z)(e,l);return(0,a.kt)(f,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"icreateverifiablecredentialldargscredential-property"},"ICreateVerifiableCredentialLDArgs.credential property"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,a.kt)("p",null,"The json payload of the Credential according to the ",(0,a.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/vc-data-model/#credentials"},"canonical model")),(0,a.kt)("p",null,"The signer of the Credential is chosen based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"issuer.id")," property of the ",(0,a.kt)("inlineCode",{parentName:"p"},"credential")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@context"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"type")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"issuanceDate")," will be added automatically if omitted"),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"credential: CredentialPayload\n")))}m.isMDXComponent=!0}}]);