"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[88448],{3905:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return g}});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function m(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?m(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):m(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},m=Object.keys(e);for(r=0;r<m.length;r++)a=m[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(e);for(r=0;r<m.length;r++)a=m[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var d=r.createContext({}),s=function(e){var t=r.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,m=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=s(a),u=n,g=p["".concat(d,".").concat(u)]||p[u]||l[u]||m;return a?r.createElement(g,i(i({ref:t},c),{},{components:a})):r.createElement(g,i({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var m=a.length,i=new Array(m);i[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[p]="string"==typeof e?e:n,i[1]=o;for(var s=2;s<m;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3223:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=a(87462),n=a(63366),m=(a(67294),a(3905)),i=["components"],o={id:"did-comm.ididcomm.getdidcommmessagemediatype",title:"IDIDComm.getDIDCommMessageMediaType() method",hide_title:!0},d=void 0,s={unversionedId:"api/did-comm.ididcomm.getdidcommmessagemediatype",id:"api/did-comm.ididcomm.getdidcommmessagemediatype",title:"IDIDComm.getDIDCommMessageMediaType() method",description:"IDIDComm.getDIDCommMessageMediaType() method",source:"@site/docs/api/did-comm.ididcomm.getdidcommmessagemediatype.md",sourceDirName:"api",slug:"/api/did-comm.ididcomm.getdidcommmessagemediatype",permalink:"/docs/api/did-comm.ididcomm.getdidcommmessagemediatype",draft:!1,tags:[],version:"current",frontMatter:{id:"did-comm.ididcomm.getdidcommmessagemediatype",title:"IDIDComm.getDIDCommMessageMediaType() method",hide_title:!0}},c={},p=[{value:"IDIDComm.getDIDCommMessageMediaType() method",id:"ididcommgetdidcommmessagemediatype-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Exceptions",id:"exceptions",level:2}],l={toc:p},u="wrapper";function g(e){var t=e.components,a=(0,n.Z)(e,i);return(0,m.kt)(u,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,m.kt)("h2",{id:"ididcommgetdidcommmessagemediatype-method"},"IDIDComm.getDIDCommMessageMediaType() method"),(0,m.kt)("blockquote",null,(0,m.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,m.kt)("p",null,"Partially decodes a possible DIDComm message string to determine the ",(0,m.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType")),(0,m.kt)("b",null,"Signature:"),(0,m.kt)("pre",null,(0,m.kt)("code",{parentName:"pre",className:"language-typescript"},"getDIDCommMessageMediaType(args: IPackedDIDCommMessage): Promise<DIDCommMessageMediaType>;\n")),(0,m.kt)("h2",{id:"parameters"},"Parameters"),(0,m.kt)("table",null,(0,m.kt)("thead",{parentName:"table"},(0,m.kt)("tr",{parentName:"thead"},(0,m.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,m.kt)("th",{parentName:"tr",align:null},"Type"),(0,m.kt)("th",{parentName:"tr",align:null},"Description"))),(0,m.kt)("tbody",{parentName:"table"},(0,m.kt)("tr",{parentName:"tbody"},(0,m.kt)("td",{parentName:"tr",align:null},"args"),(0,m.kt)("td",{parentName:"tr",align:null},(0,m.kt)("a",{parentName:"td",href:"/docs/api/did-comm.ipackeddidcommmessage"},"IPackedDIDCommMessage")),(0,m.kt)("td",{parentName:"tr",align:null})))),(0,m.kt)("b",null,"Returns:"),(0,m.kt)("p",null,"Promise","<",(0,m.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType"),">"),(0,m.kt)("p",null,"the ",(0,m.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType")," if it was successfully parsed"),(0,m.kt)("h2",{id:"exceptions"},"Exceptions"),(0,m.kt)("p",null,"if the message cannot be parsed as DIDComm v2"),(0,m.kt)("p",null,"This API may change without a BREAKING CHANGE notice."))}g.isMDXComponent=!0}}]);