"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[38493],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},y="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),y=s(n),u=a,d=y["".concat(c,".").concat(u)]||y[u]||l[u]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var m={};for(var c in t)hasOwnProperty.call(t,c)&&(m[c]=t[c]);m.originalType=e,m[y]="string"==typeof e?e:a,i[1]=m;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},19348:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return m},metadata:function(){return s},toc:function(){return y}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=["components"],m={id:"kms-web3.web3keymanagementsystem.createkey",title:"Web3KeyManagementSystem.createKey() method",hide_title:!0},c=void 0,s={unversionedId:"api/kms-web3.web3keymanagementsystem.createkey",id:"api/kms-web3.web3keymanagementsystem.createkey",title:"Web3KeyManagementSystem.createKey() method",description:"Web3KeyManagementSystem.createKey() method",source:"@site/docs/api/kms-web3.web3keymanagementsystem.createkey.md",sourceDirName:"api",slug:"/api/kms-web3.web3keymanagementsystem.createkey",permalink:"/docs/api/kms-web3.web3keymanagementsystem.createkey",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/kms-web3.web3keymanagementsystem.createkey.md",tags:[],version:"current",frontMatter:{id:"kms-web3.web3keymanagementsystem.createkey",title:"Web3KeyManagementSystem.createKey() method",hide_title:!0}},p={},y=[{value:"Web3KeyManagementSystem.createKey() method",id:"web3keymanagementsystemcreatekey-method",level:2},{value:"Parameters",id:"parameters",level:2}],l={toc:y},u="wrapper";function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"web3keymanagementsystemcreatekey-method"},"Web3KeyManagementSystem.createKey() method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"createKey({ type }: {\n        type: TKeyType;\n    }): Promise<ManagedKeyInfo>;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"{ type }"),(0,o.kt)("td",{parentName:"tr",align:null},"{ type: ",(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.tkeytype"},"TKeyType"),"; }"),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("b",null,"Returns:"),(0,o.kt)("p",null,"Promise","<",(0,o.kt)("a",{parentName:"p",href:"/docs/api/core-types.managedkeyinfo"},"ManagedKeyInfo"),">"))}d.isMDXComponent=!0}}]);