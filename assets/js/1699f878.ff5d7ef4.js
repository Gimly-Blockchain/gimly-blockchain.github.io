"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[21146],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),m=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(p.Provider,{value:n},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=m(t),d=a,g=l["".concat(p,".").concat(d)]||l[d]||u[d]||o;return t?r.createElement(g,i(i({ref:n},s),{},{components:t})):r.createElement(g,i({ref:n},s))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c[l]="string"==typeof e?e:a,i[1]=c;for(var m=2;m<o;m++)i[m]=t[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},87228:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return p},default:function(){return g},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return l}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],c={id:"did-comm.didcommmessagepacking",title:"DIDCommMessagePacking type",hide_title:!0},p=void 0,m={unversionedId:"api/did-comm.didcommmessagepacking",id:"api/did-comm.didcommmessagepacking",title:"DIDCommMessagePacking type",description:"DIDCommMessagePacking type",source:"@site/docs/api/did-comm.didcommmessagepacking.md",sourceDirName:"api",slug:"/api/did-comm.didcommmessagepacking",permalink:"/docs/api/did-comm.didcommmessagepacking",draft:!1,tags:[],version:"current",frontMatter:{id:"did-comm.didcommmessagepacking",title:"DIDCommMessagePacking type",hide_title:!0}},s={},l=[{value:"DIDCommMessagePacking type",id:"didcommmessagepacking-type",level:2}],u={toc:l},d="wrapper";function g(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)(d,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"didcommmessagepacking-type"},"DIDCommMessagePacking type"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("p",null,"The possible types of message packing."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"authcrypt"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"anoncrypt"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"anoncrypt+authcrypt"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"anoncrypt+jws")," will produce ",(0,o.kt)("inlineCode",{parentName:"p"},"DIDCommMessageMediaType.ENCRYPTED")," messages."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"jws")," will produce ",(0,o.kt)("inlineCode",{parentName:"p"},"DIDCommMessageMediaType.SIGNED")," messages."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"none")," will produce ",(0,o.kt)("inlineCode",{parentName:"p"},"DIDCommMessageMediaType.PLAIN")," messages."),(0,o.kt)("p",null,"This API may change without a BREAKING CHANGE notice."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export type DIDCommMessagePacking =\n  | 'authcrypt'\n  | 'anoncrypt'\n  | 'jws'\n  | 'none'\n  | 'anoncrypt+authcrypt'\n  | 'anoncrypt+jws'\n")))}g.isMDXComponent=!0}}]);