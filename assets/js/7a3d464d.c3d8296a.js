"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[48287],{3905:function(n,e,t){t.d(e,{Zo:function(){return c},kt:function(){return u}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function g(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var o=r.createContext({}),a=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},c=function(n){var e=a(n.components);return r.createElement(o.Provider,{value:e},n.children)},d="mdxType",y={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,s=n.originalType,o=n.parentName,c=g(n,["components","mdxType","originalType","parentName"]),d=a(t),m=i,u=d["".concat(o,".").concat(m)]||d[m]||y[m]||s;return t?r.createElement(u,p(p({ref:e},c),{},{components:t})):r.createElement(u,p({ref:e},c))}));function u(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var s=t.length,p=new Array(s);p[0]=m;var g={};for(var o in e)hasOwnProperty.call(e,o)&&(g[o]=e[o]);g.originalType=n,g[d]="string"==typeof n?n:i,p[1]=g;for(var a=2;a<s;a++)p[a]=t[a];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},54459:function(n,e,t){t.r(e),t.d(e,{assets:function(){return c},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return g},metadata:function(){return a},toc:function(){return d}});var r=t(87462),i=t(63366),s=(t(67294),t(3905)),p=["components"],g={id:"did-comm.didcomm.schema",title:"DIDComm.schema property",hide_title:!0},o=void 0,a={unversionedId:"api/did-comm.didcomm.schema",id:"api/did-comm.didcomm.schema",title:"DIDComm.schema property",description:"DIDComm.schema property",source:"@site/docs/api/did-comm.didcomm.schema.md",sourceDirName:"api",slug:"/api/did-comm.didcomm.schema",permalink:"/docs/api/did-comm.didcomm.schema",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/did-comm.didcomm.schema.md",tags:[],version:"current",frontMatter:{id:"did-comm.didcomm.schema",title:"DIDComm.schema property",hide_title:!0}},c={},d=[{value:"DIDComm.schema property",id:"didcommschema-property",level:2}],y={toc:d},m="wrapper";function u(n){var e=n.components,t=(0,i.Z)(n,p);return(0,s.kt)(m,(0,r.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"didcommschema-property"},"DIDComm.schema property"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'readonly schema: {\n        components: {\n            schemas: {\n                IPackedDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        message: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                DIDCommMessageMediaType: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                IPackDIDCommMessageArgs: {\n                    type: string;\n                    properties: {\n                        message: {\n                            $ref: string;\n                        };\n                        packing: {\n                            $ref: string;\n                        };\n                        keyRef: {\n                            type: string;\n                        };\n                        options: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                        from: {\n                            type: string;\n                        };\n                        to: {\n                            type: string;\n                        };\n                        thid: {\n                            type: string;\n                        };\n                        pthid: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                        expires_time: {\n                            type: string;\n                        };\n                        created_time: {\n                            type: string;\n                        };\n                        next: {\n                            type: string;\n                        };\n                        from_prior: {\n                            type: string;\n                        };\n                        body: {};\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        return_route: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                DIDCommMessagePacking: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                IDIDCommOptions: {\n                    type: string;\n                    properties: {\n                        bcc: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        recipientKids: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                ISendDIDCommMessageArgs: {\n                    type: string;\n                    properties: {\n                        packedMessage: {\n                            $ref: string;\n                        };\n                        messageId: {\n                            type: string;\n                        };\n                        returnTransportId: {\n                            type: string;\n                        };\n                        recipientDidUrl: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ISendMessageDIDCommAlpha1Args: {\n                    type: string;\n                    properties: {\n                        url: {\n                            type: string;\n                        };\n                        save: {\n                            type: string;\n                        };\n                        data: {\n                            type: string;\n                            properties: {\n                                id: {\n                                    type: string;\n                                };\n                                from: {\n                                    type: string;\n                                };\n                                to: {\n                                    type: string;\n                                };\n                                type: {\n                                    type: string;\n                                };\n                                body: {\n                                    anyOf: {\n                                        type: string;\n                                    }[];\n                                };\n                            };\n                            required: string[];\n                        };\n                        headers: {\n                            type: string;\n                            additionalProperties: {\n                                type: string;\n                            };\n                        };\n                    };\n                    required: string[];\n                    deprecated: string;\n                };\n                IMessage: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        createdAt: {\n                            type: string;\n                            description: string;\n                        };\n                        expiresAt: {\n                            type: string;\n                            description: string;\n                        };\n                        threadId: {\n                            type: string;\n                            description: string;\n                        };\n                        raw: {\n                            type: string;\n                            description: string;\n                        };\n                        data: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                            description: string;\n                        };\n                        replyTo: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        replyUrl: {\n                            type: string;\n                            description: string;\n                        };\n                        from: {\n                            type: string;\n                            description: string;\n                        };\n                        to: {\n                            type: string;\n                            description: string;\n                        };\n                        metaData: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        credentials: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        presentations: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        returnRoute: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMetaData: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        value: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                IMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                IUnpackDIDCommMessageArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                IUnpackedDIDCommMessage: {\n                    type: string;\n                    properties: {\n                        metaData: {\n                            $ref: string;\n                        };\n                        message: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDCommMessageMetaData: {\n                    type: string;\n                    properties: {\n                        packing: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n            };\n            methods: {\n                getDIDCommMessageMediaType: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                packDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                sendDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                sendMessageDIDCommAlpha1: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                unpackDIDCommMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n            };\n        };\n    };\n')))}u.isMDXComponent=!0}}]);