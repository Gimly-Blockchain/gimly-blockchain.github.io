"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[34745],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return y}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=s(r),d=a,y=f["".concat(p,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(y,o(o({ref:t},c),{},{components:r})):n.createElement(y,o({ref:t},c))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[f]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},92902:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return f}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"core-types.iverifypresentationargs",title:"IVerifyPresentationArgs interface",hide_title:!0},p=void 0,s={unversionedId:"api/core-types.iverifypresentationargs",id:"api/core-types.iverifypresentationargs",title:"IVerifyPresentationArgs interface",description:"IVerifyPresentationArgs interface",source:"@site/docs/api/core-types.iverifypresentationargs.md",sourceDirName:"api",slug:"/api/core-types.iverifypresentationargs",permalink:"/docs/api/core-types.iverifypresentationargs",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/core-types.iverifypresentationargs.md",tags:[],version:"current",frontMatter:{id:"core-types.iverifypresentationargs",title:"IVerifyPresentationArgs interface",hide_title:!0}},c={},f=[{value:"IVerifyPresentationArgs interface",id:"iverifypresentationargs-interface",level:2},{value:"Properties",id:"properties",level:2}],u={toc:f},d="wrapper";function y(e){var t=e.components,r=(0,a.Z)(e,o);return(0,i.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"iverifypresentationargs-interface"},"IVerifyPresentationArgs interface"),(0,i.kt)("p",null,"Encapsulates the parameters required to verify a ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3.org/TR/vc-data-model/#presentations"},"W3C Verifiable Presentation")),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IVerifyPresentationArgs\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Property"),(0,i.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iverifypresentationargs.challenge"},"challenge?")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("i",null,"(Optional)")," Optional (only for JWT) string challenge parameter to verify the verifiable presentation against")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iverifypresentationargs.domain"},"domain?")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"string"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("i",null,"(Optional)")," Optional (only for JWT) string domain parameter to verify the verifiable presentation against")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iverifypresentationargs.fetchremotecontexts"},"fetchRemoteContexts?")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},"boolean"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,(0,i.kt)("i",null,"(Optional)")," When dealing with JSON-LD you also MUST provide the proper contexts. Set this to ",(0,i.kt)("code",null,"true")," ONLY if you want the ",(0,i.kt)("code",null,"@context")," URLs to be fetched in case they are not preloaded. The context definitions SHOULD rather be provided at startup instead of being fetched."),(0,i.kt)("p",null,"Defaults to ",(0,i.kt)("code",null,"false")))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iverifypresentationargs.policies"},"policies?")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.verificationpolicies"},"VerificationPolicies")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("i",null,"(Optional)")," Overrides specific aspects of credential verification, where possible.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.iverifypresentationargs.presentation"},"presentation")),(0,i.kt)("td",{parentName:"tr",align:null}),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.w3cverifiablepresentation"},"W3CVerifiablePresentation")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("p",null,"The Verifiable Presentation object according to the ",(0,i.kt)("a",{parentName:"td",href:"https://www.w3.org/TR/vc-data-model/#presentations"},"canonical model")," or the JWT representation."),(0,i.kt)("p",null,"The signer of the Presentation is verified based on the ",(0,i.kt)("code",null,"holder")," property of the ",(0,i.kt)("code",null,"presentation")," or the ",(0,i.kt)("code",null,"iss")," property of the JWT payload respectively"))))))}y.isMDXComponent=!0}}]);