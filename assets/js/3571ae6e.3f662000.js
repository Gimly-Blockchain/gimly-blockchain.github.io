"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[54092],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return g}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,g=c["".concat(l,".").concat(m)]||c[m]||d[m]||o;return r?n.createElement(g,i(i({ref:t},u),{},{components:r})):n.createElement(g,i({ref:t},u))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},90716:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],s={id:"remote-server",title:"remote-server package",hide_title:!0},l=void 0,p={unversionedId:"api/remote-server",id:"api/remote-server",title:"remote-server package",description:"remote-server package",source:"@site/docs/api/remote-server.md",sourceDirName:"api",slug:"/api/remote-server",permalink:"/docs/api/remote-server",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/remote-server.md",tags:[],version:"current",frontMatter:{id:"remote-server",title:"remote-server package",hide_title:!0}},u={},c=[{value:"remote-server package",id:"remote-server-package",level:2},{value:"Example",id:"example",level:2},{value:"Functions",id:"functions",level:2},{value:"Interfaces",id:"interfaces",level:2},{value:"Variables",id:"variables",level:2}],d={toc:c},m="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"remote-server-package"},"remote-server package"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://expressjs.com"},"Express")," router for exposing ",(0,o.kt)("inlineCode",{parentName:"p"},"@gimly/remote-client")," OpenAPI schema"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import express from 'express'\nimport { agent } from './agent'\nimport { AgentRouter, ApiSchemaRouter, WebDidDocRouter } from '@gimly/remote-server'\n\nconst getAgentForRequest = async (req: express.Request) => agent\nconst exposedMethods = agent.availableMethods()\nconst basePath = '/agent'\nconst schemaPath = '/open-api.json'\n\nconst agentRouter = AgentRouter({\n  getAgentForRequest,\n  exposedMethods,\n})\n\nconst schemaRouter = ApiSchemaRouter({\n  basePath,\n  getAgentForRequest,\n  exposedMethods,\n})\n\nconst didDocRouter = WebDidDocRouter({\n  getAgentForRequest,\n})\n\nconst app = express()\napp.use(basePath, agentRouter)\napp.use(schemaPath, schemaRouter)\napp.use(didDocRouter)\napp.listen(3002)\n")),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Function"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.apikeyauth"},"apiKeyAuth({ apiKey })")),(0,o.kt)("td",{parentName:"tr",align:null},"This provides a simple authorization mechanism based on a single pre-shared API key.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.createdefaultdid"},"createDefaultDid(options)")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("b",null,(0,o.kt)("i",null,"(BETA)"))," This can be used to automatically create a did:web with signing and encryption keys and listing messaging and DIDComm service endpoints.")))),(0,o.kt)("h2",{id:"interfaces"},"Interfaces"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Interface"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.agentrouteroptions"},"AgentRouterOptions")),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.apischemarouteroptions"},"ApiSchemaRouterOptions")),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Variable"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.agentrouter"},"AgentRouter")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Creates a router that exposes ",(0,o.kt)("a",{parentName:"td",href:"/docs/api/core.agent"},"Agent")," methods remotely."),(0,o.kt)("p",null,"This can be used by ",(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-client.agentrestclient"},"AgentRestClient")," to instantiate the methods of this agent on the client."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.apischemarouter"},"ApiSchemaRouter")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a router that exposes ",(0,o.kt)("a",{parentName:"td",href:"/docs/api/core.agent"},"Agent")," OpenAPI schema")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.diddocendpoint"},"didDocEndpoint")),(0,o.kt)("td",{parentName:"tr",align:null},"The URL path to the DID document, used by did:web when the identifier is a hostname.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.messagingrouter"},"MessagingRouter")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Creates a router for handling incoming messages."),(0,o.kt)("p",null,"Messages posted to this router get sent to the ",(0,o.kt)("code",null,"handleMessage")," method of the associated agent where this is used."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.requestwithagentrouter"},"RequestWithAgentRouter")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("p",null,"Creates an expressjs router that adds a Gimly agent to the request object."),(0,o.kt)("p",null,"This is needed by all other routers provided by this package to be able to perform their functions."))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/remote-server.webdiddocrouter"},"WebDidDocRouter")),(0,o.kt)("td",{parentName:"tr",align:null},"Creates a router that serves ",(0,o.kt)("code",null,"did:web")," DID Documents")))))}g.isMDXComponent=!0}}]);