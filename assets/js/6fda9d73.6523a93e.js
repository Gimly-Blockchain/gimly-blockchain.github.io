"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[10779],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return h}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=n.createContext({}),c=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=c(e.components);return n.createElement(p.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),u=c(t),f=i,h=u["".concat(p,".").concat(f)]||u[f]||m[f]||a;return t?n.createElement(h,o(o({ref:r},l),{},{components:t})):n.createElement(h,o({ref:r},l))}));function h(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=f;var d={};for(var p in r)hasOwnProperty.call(r,p)&&(d[p]=r[p]);d.originalType=e,d[u]="string"==typeof e?e:i,o[1]=d;for(var c=2;c<a;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3290:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return p},default:function(){return h},frontMatter:function(){return d},metadata:function(){return c},toc:function(){return u}});var n=t(87462),i=t(63366),a=(t(67294),t(3905)),o=["components"],d={id:"did-provider-ethr.ethrdidprovider.matchprefix",title:"EthrDIDProvider.matchPrefix() method",hide_title:!0},p=void 0,c={unversionedId:"api/did-provider-ethr.ethrdidprovider.matchprefix",id:"api/did-provider-ethr.ethrdidprovider.matchprefix",title:"EthrDIDProvider.matchPrefix() method",description:"EthrDIDProvider.matchPrefix() method",source:"@site/docs/api/did-provider-ethr.ethrdidprovider.matchprefix.md",sourceDirName:"api",slug:"/api/did-provider-ethr.ethrdidprovider.matchprefix",permalink:"/docs/api/did-provider-ethr.ethrdidprovider.matchprefix",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/did-provider-ethr.ethrdidprovider.matchprefix.md",tags:[],version:"current",frontMatter:{id:"did-provider-ethr.ethrdidprovider.matchprefix",title:"EthrDIDProvider.matchPrefix() method",hide_title:!0}},l={},u=[{value:"EthrDIDProvider.matchPrefix() method",id:"ethrdidprovidermatchprefix-method",level:2},{value:"Parameters",id:"parameters",level:2}],m={toc:u},f="wrapper";function h(e){var r=e.components,t=(0,i.Z)(e,o);return(0,a.kt)(f,(0,n.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"ethrdidprovidermatchprefix-method"},"EthrDIDProvider.matchPrefix() method"),(0,a.kt)("p",null,"Tries to determine if this DID provider can manage DIDs with the given prefix."),(0,a.kt)("p",null,"If this provider was configured for a particular network and that network name or hexChainId is used in the prefix it will return true."),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"matchPrefix(prefix: string): boolean;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"prefix"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"The DID prefix to match against")))),(0,a.kt)("b",null,"Returns:"),(0,a.kt)("p",null,"boolean"))}h.isMDXComponent=!0}}]);