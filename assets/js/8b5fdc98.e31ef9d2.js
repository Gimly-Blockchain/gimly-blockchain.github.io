"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[5130],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return f}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),u=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=u(e.components);return n.createElement(s.Provider,{value:r},e.children)},c="mdxType",v={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(t),d=o,f=c["".concat(s,".").concat(d)]||c[d]||v[d]||a;return t?n.createElement(f,l(l({ref:r},p),{},{components:t})):n.createElement(f,l({ref:r},p))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=d;var i={};for(var s in r)hasOwnProperty.call(r,s)&&(i[s]=r[s]);i.originalType=e,i[c]="string"==typeof e?e:o,l[1]=i;for(var u=2;u<a;u++)l[u]=t[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},14425:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return c}});var n=t(87462),o=t(63366),a=(t(67294),t(3905)),l=["components"],i={id:"did-resolver.getuniversalresolverfor",title:"getUniversalResolverFor() function",hide_title:!0},s=void 0,u={unversionedId:"api/did-resolver.getuniversalresolverfor",id:"api/did-resolver.getuniversalresolverfor",title:"getUniversalResolverFor() function",description:"getUniversalResolverFor() function",source:"@site/docs/api/did-resolver.getuniversalresolverfor.md",sourceDirName:"api",slug:"/api/did-resolver.getuniversalresolverfor",permalink:"/docs/api/did-resolver.getuniversalresolverfor",draft:!1,tags:[],version:"current",frontMatter:{id:"did-resolver.getuniversalresolverfor",title:"getUniversalResolverFor() function",hide_title:!0}},p={},c=[{value:"getUniversalResolverFor() function",id:"getuniversalresolverfor-function",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2}],v={toc:c},d="wrapper";function f(e){var r=e.components,t=(0,o.Z)(e,l);return(0,a.kt)(d,(0,n.Z)({},v,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"getuniversalresolverfor-function"},"getUniversalResolverFor() function"),(0,a.kt)("p",null,"Creates a mapping of DID methods to a DIDResolver instance that can be used with ",(0,a.kt)("inlineCode",{parentName:"p"},"did-resolver")),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"export declare function getUniversalResolverFor(methods: string[], url?: string): Record<string, DIDResolver>\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"methods"),(0,a.kt)("td",{parentName:"tr",align:null},"string","[","]"),(0,a.kt)("td",{parentName:"tr",align:null},"an array of DID methods that should be resolved by this universal resolver")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"url"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("i",null,"(Optional)")," the URL for the universal resolver instance (See ",(0,a.kt)("a",{parentName:"td",href:"https://uniresolver.io"},"https://uniresolver.io")," )")))),(0,a.kt)("b",null,"Returns:"),(0,a.kt)("p",null,"Record","<","string, DIDResolver",">"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Record<string, DIDResolver>")," a mapping of the given methods to an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"DIDResolver")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const uniResolver = getUniversalResolverFor(['web', 'key', 'elem'])\nconst resolver = new Resolver({\n  ...uniResolver,\n  // other resolvers\n})\n")))}f.isMDXComponent=!0}}]);