"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[17949],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return f}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=n.createContext({}),c=function(e){var t=n.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return r?n.createElement(f,i(i({ref:t},l),{},{components:r})):n.createElement(f,i({ref:t},l))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},72536:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return d},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],s={id:"core-types.idatastoreorm.datastoreormgetidentifierscount",title:"IDataStoreORM.dataStoreORMGetIdentifiersCount() method",hide_title:!0},d=void 0,c={unversionedId:"api/core-types.idatastoreorm.datastoreormgetidentifierscount",id:"api/core-types.idatastoreorm.datastoreormgetidentifierscount",title:"IDataStoreORM.dataStoreORMGetIdentifiersCount() method",description:"IDataStoreORM.dataStoreORMGetIdentifiersCount() method",source:"@site/docs/api/core-types.idatastoreorm.datastoreormgetidentifierscount.md",sourceDirName:"api",slug:"/api/core-types.idatastoreorm.datastoreormgetidentifierscount",permalink:"/docs/api/core-types.idatastoreorm.datastoreormgetidentifierscount",draft:!1,tags:[],version:"current",frontMatter:{id:"core-types.idatastoreorm.datastoreormgetidentifierscount",title:"IDataStoreORM.dataStoreORMGetIdentifiersCount() method",hide_title:!0}},l={},p=[{value:"IDataStoreORM.dataStoreORMGetIdentifiersCount() method",id:"idatastoreormdatastoreormgetidentifierscount-method",level:2},{value:"Parameters",id:"parameters",level:2}],u={toc:p},m="wrapper";function f(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)(m,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"idatastoreormdatastoreormgetidentifierscount-method"},"IDataStoreORM.dataStoreORMGetIdentifiersCount() method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Warning: This API is now obsolete."),(0,o.kt)("p",{parentName:"blockquote"},"This will be removed in future versions of this plugin interface. This API may change without a BREAKING CHANGE notice.")),(0,o.kt)("p",null,"Tries to obtain a count of ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/core-types.iidentifier"},"IIdentifiers")," that match the given filter. The origin of these identifiers is from any credential / presentation or message that was successfully processed by this agent."),(0,o.kt)("p",null,"If the same database is used for implementations of ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/did-manager.abstractdidstore"},"AbstractDIDStore"),", then these identifiers can also come from ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/core-types.ididmanager.didmanagercreate"},"didManagerCreate")," or ",(0,o.kt)("a",{parentName:"p",href:"/docs/api/core-types.ididmanager.didmanagerimport"},"didManagerImport")," operations."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"dataStoreORMGetIdentifiersCount(args: FindIdentifiersArgs, context: AuthorizedDIDContext): Promise<number>;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"args"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.findidentifiersargs"},"FindIdentifiersArgs")),(0,o.kt)("td",{parentName:"tr",align:null},"The filter to apply when querying")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"context"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.authorizeddidcontext"},"AuthorizedDIDContext")),(0,o.kt)("td",{parentName:"tr",align:null},"Can be used to signal that only a particular DID is authorized to perform this operation. This will cause the result to only contain data that this DID should be able to access.")))),(0,o.kt)("b",null,"Returns:"),(0,o.kt)("p",null,"Promise","<","number",">"))}f.isMDXComponent=!0}}]);