"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[79509],{3905:function(n,e,t){t.d(e,{Zo:function(){return d},kt:function(){return u}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function a(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var o=r.createContext({}),c=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},d=function(n){var e=c(n.components);return r.createElement(o.Provider,{value:e},n.children)},g="mdxType",l={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},y=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,s=n.originalType,o=n.parentName,d=a(n,["components","mdxType","originalType","parentName"]),g=c(t),y=i,u=g["".concat(o,".").concat(y)]||g[y]||l[y]||s;return t?r.createElement(u,p(p({ref:e},d),{},{components:t})):r.createElement(u,p({ref:e},d))}));function u(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var s=t.length,p=new Array(s);p[0]=y;var a={};for(var o in e)hasOwnProperty.call(e,o)&&(a[o]=e[o]);a.originalType=n,a[g]="string"==typeof n?n:i,p[1]=a;for(var c=2;c<s;c++)p[c]=t[c];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},28694:function(n,e,t){t.r(e),t.d(e,{assets:function(){return d},contentTitle:function(){return o},default:function(){return u},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return g}});var r=t(87462),i=t(63366),s=(t(67294),t(3905)),p=["components"],a={id:"credential-ld.credentialissuerld.schema",title:"CredentialIssuerLD.schema property",hide_title:!0},o=void 0,c={unversionedId:"api/credential-ld.credentialissuerld.schema",id:"api/credential-ld.credentialissuerld.schema",title:"CredentialIssuerLD.schema property",description:"CredentialIssuerLD.schema property",source:"@site/docs/api/credential-ld.credentialissuerld.schema.md",sourceDirName:"api",slug:"/api/credential-ld.credentialissuerld.schema",permalink:"/docs/api/credential-ld.credentialissuerld.schema",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/credential-ld.credentialissuerld.schema.md",tags:[],version:"current",frontMatter:{id:"credential-ld.credentialissuerld.schema",title:"CredentialIssuerLD.schema property",hide_title:!0}},d={},g=[{value:"CredentialIssuerLD.schema property",id:"credentialissuerldschema-property",level:2}],l={toc:g},y="wrapper";function u(n){var e=n.components,t=(0,i.Z)(n,p);return(0,s.kt)(y,(0,r.Z)({},l,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"credentialissuerldschema-property"},"CredentialIssuerLD.schema property"),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'readonly schema: {\n        components: {\n            schemas: {\n                ICreateVerifiableCredentialLDArgs: {\n                    type: string;\n                    properties: {\n                        credential: {\n                            $ref: string;\n                            description: string;\n                        };\n                        keyRef: {\n                            type: string;\n                            description: string;\n                        };\n                        fetchRemoteContexts: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    additionalProperties: {\n                        description: string;\n                    };\n                    description: string;\n                };\n                CredentialPayload: {\n                    type: string;\n                    properties: {\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            $ref: string;\n                        };\n                        expirationDate: {\n                            $ref: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                DateType: {\n                    type: string;\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ICreateVerifiablePresentationLDArgs: {\n                    type: string;\n                    properties: {\n                        presentation: {\n                            $ref: string;\n                            description: string;\n                        };\n                        challenge: {\n                            type: string;\n                            description: string;\n                        };\n                        domain: {\n                            type: string;\n                            description: string;\n                        };\n                        keyRef: {\n                            type: string;\n                            description: string;\n                        };\n                        fetchRemoteContexts: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    additionalProperties: {\n                        description: string;\n                    };\n                    description: string;\n                };\n                PresentationPayload: {\n                    type: string;\n                    properties: {\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            $ref: string;\n                        };\n                        expirationDate: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IVerifyCredentialLDArgs: {\n                    type: string;\n                    properties: {\n                        credential: {\n                            $ref: string;\n                            description: string;\n                        };\n                        fetchRemoteContexts: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    additionalProperties: {\n                        description: string;\n                    };\n                    description: string;\n                };\n                IVerifyPresentationLDArgs: {\n                    type: string;\n                    properties: {\n                        presentation: {\n                            $ref: string;\n                            description: string;\n                        };\n                        challenge: {\n                            type: string;\n                            description: string;\n                        };\n                        domain: {\n                            type: string;\n                            description: string;\n                        };\n                        fetchRemoteContexts: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    additionalProperties: {\n                        description: string;\n                    };\n                    description: string;\n                };\n            };\n            methods: {\n                createVerifiableCredentialLD: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                createVerifiablePresentationLD: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                verifyCredentialLD: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                verifyPresentationLD: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n            };\n        };\n    };\n')))}u.isMDXComponent=!0}}]);