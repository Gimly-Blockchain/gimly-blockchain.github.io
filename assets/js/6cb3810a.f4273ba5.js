"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[30374],{3905:function(n,e,t){t.d(e,{Zo:function(){return a},kt:function(){return u}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function p(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function g(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var d=r.createContext({}),o=function(n){var e=r.useContext(d),t=e;return n&&(t="function"==typeof n?n(e):p(p({},e),n)),t},a=function(n){var e=o(n.components);return r.createElement(d.Provider,{value:e},n.children)},y="mdxType",c={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,s=n.originalType,d=n.parentName,a=g(n,["components","mdxType","originalType","parentName"]),y=o(t),f=i,u=y["".concat(d,".").concat(f)]||y[f]||c[f]||s;return t?r.createElement(u,p(p({ref:e},a),{},{components:t})):r.createElement(u,p({ref:e},a))}));function u(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var s=t.length,p=new Array(s);p[0]=f;var g={};for(var d in e)hasOwnProperty.call(e,d)&&(g[d]=e[d]);g.originalType=n,g[y]="string"==typeof n?n:i,p[1]=g;for(var o=2;o<s;o++)p[o]=t[o];return r.createElement.apply(null,p)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},18615:function(n,e,t){t.r(e),t.d(e,{assets:function(){return a},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return g},metadata:function(){return o},toc:function(){return y}});var r=t(87462),i=t(63366),s=(t(67294),t(3905)),p=["components"],g={id:"did-manager.didmanager.schema",title:"DIDManager.schema property",hide_title:!0},d=void 0,o={unversionedId:"api/did-manager.didmanager.schema",id:"api/did-manager.didmanager.schema",title:"DIDManager.schema property",description:"DIDManager.schema property",source:"@site/docs/api/did-manager.didmanager.schema.md",sourceDirName:"api",slug:"/api/did-manager.didmanager.schema",permalink:"/docs/api/did-manager.didmanager.schema",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/did-manager.didmanager.schema.md",tags:[],version:"current",frontMatter:{id:"did-manager.didmanager.schema",title:"DIDManager.schema property",hide_title:!0}},a={},y=[{value:"DIDManager.schema property",id:"didmanagerschema-property",level:2}],c={toc:y},f="wrapper";function u(n){var e=n.components,t=(0,i.Z)(n,p);return(0,s.kt)(f,(0,r.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"didmanagerschema-property"},"DIDManager.schema property"),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'readonly schema: {\n        components: {\n            schemas: {\n                IDIDManagerAddKeyArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        key: {\n                            $ref: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IKey: {\n                    type: string;\n                    properties: {\n                        kid: {\n                            type: string;\n                            description: string;\n                        };\n                        kms: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            $ref: string;\n                            description: string;\n                        };\n                        publicKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        privateKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        meta: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                            } | {\n                                type: string;\n                                $ref?: undefined;\n                            })[];\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TKeyType: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                KeyMetadata: {\n                    type: string;\n                    properties: {\n                        algorithms: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                    };\n                    description: string;\n                };\n                IDIDManagerAddServiceArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        service: {\n                            $ref: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IService: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        serviceEndpoint: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                                items?: undefined;\n                            } | {\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                                $ref?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        description: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IServiceEndpoint: {\n                    anyOf: {\n                        type: string;\n                    }[];\n                    description: string;\n                };\n                IDIDManagerCreateArgs: {\n                    type: string;\n                    properties: {\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                        kms: {\n                            type: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                IIdentifier: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                        controllerKeyId: {\n                            type: string;\n                            description: string;\n                        };\n                        keys: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        services: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerDeleteArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerFindArgs: {\n                    type: string;\n                    properties: {\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                IDIDManagerGetArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerGetByAliasArgs: {\n                    type: string;\n                    properties: {\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerGetOrCreateArgs: {\n                    type: string;\n                    properties: {\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                        kms: {\n                            type: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                MinimalImportableIdentifier: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                        controllerKeyId: {\n                            type: string;\n                            description: string;\n                        };\n                        keys: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        services: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                MinimalImportableKey: {\n                    $ref: string;\n                    description: string;\n                };\n                "RequireOnly<IKey,(\\"privateKeyHex\\"|\\"type\\"|\\"kms\\")>": {\n                    type: string;\n                    properties: {\n                        kid: {\n                            type: string;\n                            description: string;\n                        };\n                        kms: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            $ref: string;\n                            description: string;\n                        };\n                        publicKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        privateKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        meta: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                            } | {\n                                type: string;\n                                $ref?: undefined;\n                            })[];\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                IDIDManagerRemoveKeyArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        kid: {\n                            type: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerRemoveServiceArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerSetAliasArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDIDManagerUpdateArgs: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        document: {\n                            type: string;\n                            properties: {\n                                "@context": {\n                                    anyOf: ({\n                                        type: string;\n                                        properties: {};\n                                        allOf?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties?: undefined;\n                                        allOf?: undefined;\n                                    } | {\n                                        allOf: ({\n                                            type: string;\n                                            items: {\n                                                type: string;\n                                            };\n                                            properties?: undefined;\n                                        } | {\n                                            type: string;\n                                            properties: {};\n                                            items?: undefined;\n                                        })[];\n                                        type?: undefined;\n                                        properties?: undefined;\n                                    })[];\n                                };\n                                id: {\n                                    type: string;\n                                };\n                                alsoKnownAs: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            type: string;\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                controller: {\n                                    anyOf: ({\n                                        type: string;\n                                        allOf?: undefined;\n                                    } | {\n                                        allOf: ({\n                                            type: string;\n                                            items: {\n                                                type: string;\n                                            };\n                                            properties?: undefined;\n                                        } | {\n                                            type: string;\n                                            properties: {};\n                                            items?: undefined;\n                                        })[];\n                                        type?: undefined;\n                                    })[];\n                                };\n                                verificationMethod: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            $ref: string;\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                service: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            $ref: string;\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                publicKey: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            $ref: string;\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                    deprecated: boolean;\n                                };\n                                authentication: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            anyOf: ({\n                                                type: string;\n                                                $ref?: undefined;\n                                            } | {\n                                                $ref: string;\n                                                type?: undefined;\n                                            })[];\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                assertionMethod: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            anyOf: ({\n                                                type: string;\n                                                $ref?: undefined;\n                                            } | {\n                                                $ref: string;\n                                                type?: undefined;\n                                            })[];\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                keyAgreement: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            anyOf: ({\n                                                type: string;\n                                                $ref?: undefined;\n                                            } | {\n                                                $ref: string;\n                                                type?: undefined;\n                                            })[];\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                capabilityInvocation: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            anyOf: ({\n                                                type: string;\n                                                $ref?: undefined;\n                                            } | {\n                                                $ref: string;\n                                                type?: undefined;\n                                            })[];\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                                capabilityDelegation: {\n                                    allOf: ({\n                                        type: string;\n                                        items: {\n                                            anyOf: ({\n                                                type: string;\n                                                $ref?: undefined;\n                                            } | {\n                                                $ref: string;\n                                                type?: undefined;\n                                            })[];\n                                        };\n                                        properties?: undefined;\n                                    } | {\n                                        type: string;\n                                        properties: {};\n                                        items?: undefined;\n                                    })[];\n                                };\n                            };\n                            description: string;\n                        };\n                        options: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerificationMethod: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                        controller: {\n                            type: string;\n                        };\n                        publicKeyBase58: {\n                            type: string;\n                        };\n                        publicKeyBase64: {\n                            type: string;\n                        };\n                        publicKeyJwk: {\n                            $ref: string;\n                        };\n                        publicKeyHex: {\n                            type: string;\n                        };\n                        publicKeyMultibase: {\n                            type: string;\n                        };\n                        blockchainAccountId: {\n                            type: string;\n                        };\n                        ethereumAddress: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                JsonWebKey: {\n                    type: string;\n                    properties: {\n                        alg: {\n                            type: string;\n                        };\n                        crv: {\n                            type: string;\n                        };\n                        e: {\n                            type: string;\n                        };\n                        ext: {\n                            type: string;\n                        };\n                        key_ops: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        kid: {\n                            type: string;\n                        };\n                        kty: {\n                            type: string;\n                        };\n                        n: {\n                            type: string;\n                        };\n                        use: {\n                            type: string;\n                        };\n                        x: {\n                            type: string;\n                        };\n                        y: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                Service: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                        serviceEndpoint: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                                items?: undefined;\n                            } | {\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                                $ref?: undefined;\n                            })[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ServiceEndpoint: {\n                    anyOf: {\n                        type: string;\n                    }[];\n                    description: string;\n                };\n            };\n            methods: {\n                didManagerAddKey: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerAddService: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerCreate: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                didManagerDelete: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerFind: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                didManagerGet: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                didManagerGetByAlias: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                didManagerGetOrCreate: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                didManagerGetProviders: {\n                    description: string;\n                    arguments: {\n                        type: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            type: string;\n                        };\n                    };\n                };\n                didManagerImport: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                didManagerRemoveKey: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerRemoveService: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerSetAlias: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                didManagerUpdate: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n            };\n        };\n    };\n')))}u.isMDXComponent=!0}}]);