"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[92066],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var a=r(67294);function m(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){m(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,m=function(e,t){if(null==e)return{};var r,a,m={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(m[r]=e[r]);return m}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(m[r]=e[r])}return m}var d=a.createContext({}),s=function(e){var t=a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},p="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,m=e.mdxType,n=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(r),u=m,g=p["".concat(d,".").concat(u)]||p[u]||l[u]||n;return r?a.createElement(g,o(o({ref:t},c),{},{components:r})):a.createElement(g,o({ref:t},c))}));function g(e,t){var r=arguments,m=t&&t.mdxType;if("string"==typeof e||m){var n=r.length,o=new Array(n);o[0]=u;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:m,o[1]=i;for(var s=2;s<n;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},46976:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var a=r(87462),m=r(63366),n=(r(67294),r(3905)),o=["components"],i={id:"did-comm.didcomm.getdidcommmessagemediatype",title:"DIDComm.getDidCommMessageMediaType() method",hide_title:!0},d=void 0,s={unversionedId:"api/did-comm.didcomm.getdidcommmessagemediatype",id:"api/did-comm.didcomm.getdidcommmessagemediatype",title:"DIDComm.getDidCommMessageMediaType() method",description:"DIDComm.getDidCommMessageMediaType() method",source:"@site/docs/api/did-comm.didcomm.getdidcommmessagemediatype.md",sourceDirName:"api",slug:"/api/did-comm.didcomm.getdidcommmessagemediatype",permalink:"/docs/api/did-comm.didcomm.getdidcommmessagemediatype",draft:!1,tags:[],version:"current",frontMatter:{id:"did-comm.didcomm.getdidcommmessagemediatype",title:"DIDComm.getDidCommMessageMediaType() method",hide_title:!0}},c={},p=[{value:"DIDComm.getDidCommMessageMediaType() method",id:"didcommgetdidcommmessagemediatype-method",level:2},{value:"Parameters",id:"parameters",level:2}],l={toc:p},u="wrapper";function g(e){var t=e.components,r=(0,m.Z)(e,o);return(0,n.kt)(u,(0,a.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"didcommgetdidcommmessagemediatype-method"},"DIDComm.getDidCommMessageMediaType() method"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,n.kt)("p",null,"Partially decodes a possible DIDComm message string to determine the ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType")),(0,n.kt)("b",null,"Signature:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"getDidCommMessageMediaType({ message }: IPackedDIDCommMessage): Promise<DIDCommMessageMediaType>;\n")),(0,n.kt)("h2",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"{ message }"),(0,n.kt)("td",{parentName:"tr",align:null},(0,n.kt)("a",{parentName:"td",href:"/docs/api/did-comm.ipackeddidcommmessage"},"IPackedDIDCommMessage")),(0,n.kt)("td",{parentName:"tr",align:null})))),(0,n.kt)("b",null,"Returns:"),(0,n.kt)("p",null,"Promise","<",(0,n.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType"),">"),(0,n.kt)("p",null,"the ",(0,n.kt)("a",{parentName:"p",href:"/docs/api/did-comm.didcommmessagemediatype"},"DIDCommMessageMediaType")," if it was successfully parsed"))}g.isMDXComponent=!0}}]);