"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[61149],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return y}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function g(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),m=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=m(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},s=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=g(e,["components","mdxType","originalType","parentName"]),u=m(t),s=a,y=u["".concat(l,".").concat(s)]||u[s]||p[s]||i;return t?r.createElement(y,o(o({ref:n},c),{},{components:t})):r.createElement(y,o({ref:n},c))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=s;var g={};for(var l in n)hasOwnProperty.call(n,l)&&(g[l]=n[l]);g.originalType=e,g[u]="string"==typeof e?e:a,o[1]=g;for(var m=2;m<i;m++)o[m]=t[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},57788:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return l},default:function(){return y},frontMatter:function(){return g},metadata:function(){return m},toc:function(){return u}});var r=t(87462),a=t(63366),i=(t(67294),t(3905)),o=["components"],g={id:"key-manager.keymanager.keymanagersign",title:"KeyManager.keyManagerSign() method",hide_title:!0},l=void 0,m={unversionedId:"api/key-manager.keymanager.keymanagersign",id:"api/key-manager.keymanager.keymanagersign",title:"KeyManager.keyManagerSign() method",description:"KeyManager.keyManagerSign() method",source:"@site/docs/api/key-manager.keymanager.keymanagersign.md",sourceDirName:"api",slug:"/api/key-manager.keymanager.keymanagersign",permalink:"/docs/api/key-manager.keymanager.keymanagersign",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/key-manager.keymanager.keymanagersign.md",tags:[],version:"current",frontMatter:{id:"key-manager.keymanager.keymanagersign",title:"KeyManager.keyManagerSign() method",hide_title:!0}},c={},u=[{value:"KeyManager.keyManagerSign() method",id:"keymanagerkeymanagersign-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:u},s="wrapper";function y(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)(s,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"keymanagerkeymanagersign-method"},"KeyManager.keyManagerSign() method"),(0,i.kt)("p",null,"Generates a signature according to the algorithm specified."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"keyManagerSign(args: IKeyManagerSignArgs): Promise<string>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"args"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ikeymanagersignargs"},"IKeyManagerSignArgs")),(0,i.kt)("td",{parentName:"tr",align:null},"The input to the signing method, including data to be signed, key reference and algorithm to use.")))),(0,i.kt)("b",null,"Returns:"),(0,i.kt)("p",null,"Promise","<","string",">"))}y.isMDXComponent=!0}}]);