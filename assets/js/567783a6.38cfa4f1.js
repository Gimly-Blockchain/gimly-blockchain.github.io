"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[49309],{3905:function(e,t,n){n.d(t,{Zo:function(){return g},kt:function(){return y}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},g=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=a,y=s["".concat(p,".").concat(m)]||s[m]||u[m]||i;return n?r.createElement(y,o(o({ref:t},g),{},{components:n})):r.createElement(y,o({ref:t},g))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:a,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},29957:function(e,t,n){n.r(t),n.d(t,{assets:function(){return g},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return s}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={id:"core-types.ikeymanager.keymanagersign",title:"IKeyManager.keyManagerSign() method",hide_title:!0},p=void 0,c={unversionedId:"api/core-types.ikeymanager.keymanagersign",id:"api/core-types.ikeymanager.keymanagersign",title:"IKeyManager.keyManagerSign() method",description:"IKeyManager.keyManagerSign() method",source:"@site/docs/api/core-types.ikeymanager.keymanagersign.md",sourceDirName:"api",slug:"/api/core-types.ikeymanager.keymanagersign",permalink:"/docs/api/core-types.ikeymanager.keymanagersign",draft:!1,tags:[],version:"current",frontMatter:{id:"core-types.ikeymanager.keymanagersign",title:"IKeyManager.keyManagerSign() method",hide_title:!0}},g={},s=[{value:"IKeyManager.keyManagerSign() method",id:"ikeymanagerkeymanagersign-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Exceptions",id:"exceptions",level:2}],u={toc:s},m="wrapper";function y(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"ikeymanagerkeymanagersign-method"},"IKeyManager.keyManagerSign() method"),(0,i.kt)("p",null,"Generates a signature according to the algorithm specified."),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"keyManagerSign(args: IKeyManagerSignArgs): Promise<string>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"args"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ikeymanagersignargs"},"IKeyManagerSignArgs")),(0,i.kt)("td",{parentName:"tr",align:null},"The input to the signing method, including data to be signed, key reference and algorithm to use.")))),(0,i.kt)("b",null,"Returns:"),(0,i.kt)("p",null,"Promise","<","string",">"),(0,i.kt)("h2",{id:"exceptions"},"Exceptions"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'Error("not_supported")')," if the KMS does not support the operation or if the key does not match the algorithm."))}y.isMDXComponent=!0}}]);