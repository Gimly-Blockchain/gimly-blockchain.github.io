"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[81784],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return m}});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=i.createContext({}),s=function(e){var r=i.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},l=function(e){var r=s(e.components);return i.createElement(c.Provider,{value:r},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},v=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,a=e.originalType,c=e.parentName,l=d(e,["components","mdxType","originalType","parentName"]),p=s(t),v=n,m=p["".concat(c,".").concat(v)]||p[v]||u[v]||a;return t?i.createElement(m,o(o({ref:r},l),{},{components:t})):i.createElement(m,o({ref:r},l))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var a=t.length,o=new Array(a);o[0]=v;var d={};for(var c in r)hasOwnProperty.call(r,c)&&(d[c]=r[c]);d.originalType=e,d[p]="string"==typeof e?e:n,o[1]=d;for(var s=2;s<a;s++)o[s]=t[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}v.displayName="MDXCreateElement"},94759:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return d},metadata:function(){return s},toc:function(){return p}});var i=t(87462),n=t(63366),a=(t(67294),t(3905)),o=["components"],d={id:"did-manager.aliasdiscoveryprovider.discoverdid",title:"AliasDiscoveryProvider.discoverDid() method",hide_title:!0},c=void 0,s={unversionedId:"api/did-manager.aliasdiscoveryprovider.discoverdid",id:"api/did-manager.aliasdiscoveryprovider.discoverdid",title:"AliasDiscoveryProvider.discoverDid() method",description:"AliasDiscoveryProvider.discoverDid() method",source:"@site/docs/api/did-manager.aliasdiscoveryprovider.discoverdid.md",sourceDirName:"api",slug:"/api/did-manager.aliasdiscoveryprovider.discoverdid",permalink:"/docs/api/did-manager.aliasdiscoveryprovider.discoverdid",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/did-manager.aliasdiscoveryprovider.discoverdid.md",tags:[],version:"current",frontMatter:{id:"did-manager.aliasdiscoveryprovider.discoverdid",title:"AliasDiscoveryProvider.discoverDid() method",hide_title:!0}},l={},p=[{value:"AliasDiscoveryProvider.discoverDid() method",id:"aliasdiscoveryproviderdiscoverdid-method",level:2},{value:"Parameters",id:"parameters",level:2}],u={toc:p},v="wrapper";function m(e){var r=e.components,t=(0,n.Z)(e,o);return(0,a.kt)(v,(0,i.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"aliasdiscoveryproviderdiscoverdid-method"},"AliasDiscoveryProvider.discoverDid() method"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,a.kt)("b",null,"Signature:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"discoverDid(args: IDIDDiscoveryDiscoverDidArgs, context: IAgentContext<IDIDManager>): Promise<IDIDDiscoveryProviderResult>;\n")),(0,a.kt)("h2",{id:"parameters"},"Parameters"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"args"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/api/did-discovery.ididdiscoverydiscoverdidargs"},"IDIDDiscoveryDiscoverDidArgs")),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"context"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("a",{parentName:"td",href:"/docs/api/core-types.iagentcontext"},"IAgentContext"),"<",(0,a.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanager"},"IDIDManager"),">"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("b",null,"Returns:"),(0,a.kt)("p",null,"Promise","<",(0,a.kt)("a",{parentName:"p",href:"/docs/api/did-discovery.ididdiscoveryproviderresult"},"IDIDDiscoveryProviderResult"),">"))}m.isMDXComponent=!0}}]);