"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[40481],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function d(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):d(d({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),s=a,g=u["".concat(l,".").concat(s)]||u[s]||m[s]||i;return r?n.createElement(g,d(d({ref:t},c),{},{components:r})):n.createElement(g,d({ref:t},c))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,d=new Array(i);d[0]=s;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:a,d[1]=o;for(var p=2;p<i;p++)d[p]=r[p];return n.createElement.apply(null,d)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},80767:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),d=["components"],o={id:"core-types.ididmanager.didmanagerfind",title:"IDIDManager.didManagerFind() method",hide_title:!0},l=void 0,p={unversionedId:"api/core-types.ididmanager.didmanagerfind",id:"api/core-types.ididmanager.didmanagerfind",title:"IDIDManager.didManagerFind() method",description:"IDIDManager.didManagerFind() method",source:"@site/docs/api/core-types.ididmanager.didmanagerfind.md",sourceDirName:"api",slug:"/api/core-types.ididmanager.didmanagerfind",permalink:"/docs/api/core-types.ididmanager.didmanagerfind",draft:!1,tags:[],version:"current",frontMatter:{id:"core-types.ididmanager.didmanagerfind",title:"IDIDManager.didManagerFind() method",hide_title:!0}},c={},u=[{value:"IDIDManager.didManagerFind() method",id:"ididmanagerdidmanagerfind-method",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2}],m={toc:u},s="wrapper";function g(e){var t=e.components,r=(0,a.Z)(e,d);return(0,i.kt)(s,(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"ididmanagerdidmanagerfind-method"},"IDIDManager.didManagerFind() method"),(0,i.kt)("p",null,"Returns a list of managed identifiers"),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"didManagerFind(args: IDIDManagerFindArgs): Promise<Array<IIdentifier>>;\n")),(0,i.kt)("h2",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Type"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"args"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/api/core-types.ididmanagerfindargs"},"IDIDManagerFindArgs")),(0,i.kt)("td",{parentName:"tr",align:null},"Required. Arguments to get the list of identifiers")))),(0,i.kt)("b",null,"Returns:"),(0,i.kt)("p",null,"Promise","<","Array","<",(0,i.kt)("a",{parentName:"p",href:"/docs/api/core-types.iidentifier"},"IIdentifier"),">",">"),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"const aliceIdentifiers = await agent.didManagerFind({\n  alias: 'alice',\n})\n\nconst goerliIdentifiers = await agent.didManagerFind({\n  provider: 'did:ethr:goerli',\n})\n")))}g.isMDXComponent=!0}}]);