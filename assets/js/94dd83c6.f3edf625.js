"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[36097],{3905:function(t,e,r){r.d(e,{Zo:function(){return c},kt:function(){return g}});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function s(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function i(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},o=Object.keys(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)r=o[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var u=a.createContext({}),d=function(t){var e=a.useContext(u),r=e;return t&&(r="function"==typeof t?t(e):s(s({},e),t)),r},c=function(t){var e=d(t.components);return a.createElement(u.Provider,{value:e},t.children)},l="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,o=t.originalType,u=t.parentName,c=i(t,["components","mdxType","originalType","parentName"]),l=d(r),m=n,g=l["".concat(u,".").concat(m)]||l[m]||p[m]||o;return r?a.createElement(g,s(s({ref:e},c),{},{components:r})):a.createElement(g,s({ref:e},c))}));function g(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var o=r.length,s=new Array(o);s[0]=m;var i={};for(var u in e)hasOwnProperty.call(e,u)&&(i[u]=e[u]);i.originalType=t,i[l]="string"==typeof t?t:n,s[1]=i;for(var d=2;d<o;d++)s[d]=r[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},56869:function(t,e,r){r.r(e),r.d(e,{assets:function(){return c},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return i},metadata:function(){return d},toc:function(){return l}});var a=r(87462),n=r(63366),o=(r(67294),r(3905)),s=["components"],i={id:"data-store-json.datastorejson.datastoreormgetmessagescount",title:"DataStoreJson.dataStoreORMGetMessagesCount() method",hide_title:!0},u=void 0,d={unversionedId:"api/data-store-json.datastorejson.datastoreormgetmessagescount",id:"api/data-store-json.datastorejson.datastoreormgetmessagescount",title:"DataStoreJson.dataStoreORMGetMessagesCount() method",description:"DataStoreJson.dataStoreORMGetMessagesCount() method",source:"@site/docs/api/data-store-json.datastorejson.datastoreormgetmessagescount.md",sourceDirName:"api",slug:"/api/data-store-json.datastorejson.datastoreormgetmessagescount",permalink:"/docs/api/data-store-json.datastorejson.datastoreormgetmessagescount",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/data-store-json.datastorejson.datastoreormgetmessagescount.md",tags:[],version:"current",frontMatter:{id:"data-store-json.datastorejson.datastoreormgetmessagescount",title:"DataStoreJson.dataStoreORMGetMessagesCount() method",hide_title:!0}},c={},l=[{value:"DataStoreJson.dataStoreORMGetMessagesCount() method",id:"datastorejsondatastoreormgetmessagescount-method",level:2},{value:"Parameters",id:"parameters",level:2}],p={toc:l},m="wrapper";function g(t){var e=t.components,r=(0,n.Z)(t,s);return(0,o.kt)(m,(0,a.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"datastorejsondatastoreormgetmessagescount-method"},"DataStoreJson.dataStoreORMGetMessagesCount() method"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"dataStoreORMGetMessagesCount(args: FindArgs<TMessageColumns>, context: AuthorizedDIDContext): Promise<number>;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"args"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.findargs"},"FindArgs"),"<",(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.tmessagecolumns"},"TMessageColumns"),">"),(0,o.kt)("td",{parentName:"tr",align:null})),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"context"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.authorizeddidcontext"},"AuthorizedDIDContext")),(0,o.kt)("td",{parentName:"tr",align:null})))),(0,o.kt)("b",null,"Returns:"),(0,o.kt)("p",null,"Promise","<","number",">"))}g.isMDXComponent=!0}}]);