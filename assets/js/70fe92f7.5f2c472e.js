"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[62013],{3905:function(n,e,t){t.d(e,{Zo:function(){return d},kt:function(){return f}});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function a(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function p(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)t=s[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var o=r.createContext({}),g=function(n){var e=r.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):a(a({},e),n)),t},d=function(n){var e=g(n.components);return r.createElement(o.Provider,{value:e},n.children)},c="mdxType",y={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,s=n.originalType,o=n.parentName,d=p(n,["components","mdxType","originalType","parentName"]),c=g(t),u=i,f=c["".concat(o,".").concat(u)]||c[u]||y[u]||s;return t?r.createElement(f,a(a({ref:e},d),{},{components:t})):r.createElement(f,a({ref:e},d))}));function f(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var s=t.length,a=new Array(s);a[0]=u;var p={};for(var o in e)hasOwnProperty.call(e,o)&&(p[o]=e[o]);p.originalType=n,p[c]="string"==typeof n?n:i,a[1]=p;for(var g=2;g<s;g++)a[g]=t[g];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},80368:function(n,e,t){t.r(e),t.d(e,{assets:function(){return d},contentTitle:function(){return o},default:function(){return f},frontMatter:function(){return p},metadata:function(){return g},toc:function(){return c}});var r=t(87462),i=t(63366),s=(t(67294),t(3905)),a=["components"],p={id:"data-store.datastore.schema",title:"DataStore.schema property",hide_title:!0},o=void 0,g={unversionedId:"api/data-store.datastore.schema",id:"api/data-store.datastore.schema",title:"DataStore.schema property",description:"DataStore.schema property",source:"@site/docs/api/data-store.datastore.schema.md",sourceDirName:"api",slug:"/api/data-store.datastore.schema",permalink:"/docs/api/data-store.datastore.schema",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/data-store.datastore.schema.md",tags:[],version:"current",frontMatter:{id:"data-store.datastore.schema",title:"DataStore.schema property",hide_title:!0}},d={},c=[{value:"DataStore.schema property",id:"datastoreschema-property",level:2}],y={toc:c},u="wrapper";function f(n){var e=n.components,t=(0,i.Z)(n,a);return(0,s.kt)(u,(0,r.Z)({},y,t,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"datastoreschema-property"},"DataStore.schema property"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'readonly schema: {\n        components: {\n            schemas: {\n                IDataStoreDeleteMessageArgs: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreDeleteVerifiableCredentialArgs: {\n                    type: string;\n                    properties: {\n                        hash: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreGetMessageArgs: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessage: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        createdAt: {\n                            type: string;\n                            description: string;\n                        };\n                        expiresAt: {\n                            type: string;\n                            description: string;\n                        };\n                        threadId: {\n                            type: string;\n                            description: string;\n                        };\n                        raw: {\n                            type: string;\n                            description: string;\n                        };\n                        data: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                            description: string;\n                        };\n                        replyTo: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        replyUrl: {\n                            type: string;\n                            description: string;\n                        };\n                        from: {\n                            type: string;\n                            description: string;\n                        };\n                        to: {\n                            type: string;\n                            description: string;\n                        };\n                        metaData: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        credentials: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        presentations: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        returnRoute: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMetaData: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        value: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                IMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                IDataStoreGetVerifiableCredentialArgs: {\n                    type: string;\n                    properties: {\n                        hash: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreGetVerifiablePresentationArgs: {\n                    type: string;\n                    properties: {\n                        hash: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreSaveMessageArgs: {\n                    type: string;\n                    properties: {\n                        message: {\n                            $ref: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreSaveVerifiableCredentialArgs: {\n                    type: string;\n                    properties: {\n                        verifiableCredential: {\n                            $ref: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IDataStoreSaveVerifiablePresentationArgs: {\n                    type: string;\n                    properties: {\n                        verifiablePresentation: {\n                            $ref: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n            };\n            methods: {\n                dataStoreDeleteMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreDeleteVerifiableCredential: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreGetMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                dataStoreGetVerifiableCredential: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                dataStoreGetVerifiablePresentation: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        $ref: string;\n                    };\n                };\n                dataStoreSaveMessage: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreSaveVerifiableCredential: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreSaveVerifiablePresentation: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n            };\n        };\n    };\n')))}f.isMDXComponent=!0}}]);