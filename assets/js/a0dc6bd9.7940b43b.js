"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[83687],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return y}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),l=c(r),f=o,y=l["".concat(s,".").concat(f)]||l[f]||d[f]||i;return r?n.createElement(y,p(p({ref:t},u),{},{components:r})):n.createElement(y,p({ref:t},u))}));function y(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=f;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[l]="string"==typeof e?e:o,p[1]=a;for(var c=2;c<i;c++)p[c]=r[c];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},52106:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return y},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return l}});var n=r(87462),o=r(63366),i=(r(67294),r(3905)),p=["components"],a={id:"core-types.iagentoptions.overrides",title:"IAgentOptions.overrides property",hide_title:!0},s=void 0,c={unversionedId:"api/core-types.iagentoptions.overrides",id:"api/core-types.iagentoptions.overrides",title:"IAgentOptions.overrides property",description:"IAgentOptions.overrides property",source:"@site/docs/api/core-types.iagentoptions.overrides.md",sourceDirName:"api",slug:"/api/core-types.iagentoptions.overrides",permalink:"/docs/api/core-types.iagentoptions.overrides",draft:!1,tags:[],version:"current",frontMatter:{id:"core-types.iagentoptions.overrides",title:"IAgentOptions.overrides property",hide_title:!0}},u={},l=[{value:"IAgentOptions.overrides property",id:"iagentoptionsoverrides-property",level:2}],d={toc:l},f="wrapper";function y(e){var t=e.components,r=(0,o.Z)(e,p);return(0,i.kt)(f,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"iagentoptionsoverrides-property"},"IAgentOptions.overrides property"),(0,i.kt)("p",null,"The map of plugin methods. Can be used to override methods provided by plugins, or to add additional methods without writing a plugin"),(0,i.kt)("b",null,"Signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"overrides?: IPluginMethodMap;\n")))}y.isMDXComponent=!0}}]);