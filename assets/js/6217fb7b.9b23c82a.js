"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[1395],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return d}});var a=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),s=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=s(e.components);return a.createElement(l.Provider,{value:r},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},y=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(t),y=n,d=u["".concat(l,".").concat(y)]||u[y]||m[y]||o;return t?a.createElement(d,i(i({ref:r},p),{},{components:t})):a.createElement(d,i({ref:r},p))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=y;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[u]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},2813:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return l},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var a=t(87462),n=t(63366),o=(t(67294),t(3905)),i=["components"],c={id:"key-manager.keymanager.keymanagersharedsecret",title:"KeyManager.keyManagerSharedSecret() method",hide_title:!0},l=void 0,s={unversionedId:"api/key-manager.keymanager.keymanagersharedsecret",id:"api/key-manager.keymanager.keymanagersharedsecret",title:"KeyManager.keyManagerSharedSecret() method",description:"KeyManager.keyManagerSharedSecret() method",source:"@site/docs/api/key-manager.keymanager.keymanagersharedsecret.md",sourceDirName:"api",slug:"/api/key-manager.keymanager.keymanagersharedsecret",permalink:"/docs/api/key-manager.keymanager.keymanagersharedsecret",draft:!1,tags:[],version:"current",frontMatter:{id:"key-manager.keymanager.keymanagersharedsecret",title:"KeyManager.keyManagerSharedSecret() method",hide_title:!0}},p={},u=[{value:"KeyManager.keyManagerSharedSecret() method",id:"keymanagerkeymanagersharedsecret-method",level:2},{value:"Parameters",id:"parameters",level:2}],m={toc:u},y="wrapper";function d(e){var r=e.components,t=(0,n.Z)(e,i);return(0,o.kt)(y,(0,a.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"keymanagerkeymanagersharedsecret-method"},"KeyManager.keyManagerSharedSecret() method"),(0,o.kt)("p",null,"Compute a shared secret with the public key of another party."),(0,o.kt)("p",null,"This computes the raw shared secret (the result of a Diffie-Hellman computation) To use this for symmetric encryption you MUST apply a KDF on the result."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"keyManagerSharedSecret(args: IKeyManagerSharedSecretArgs): Promise<string>;\n")),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"args"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/core-types.ikeymanagersharedsecretargs"},"IKeyManagerSharedSecretArgs")),(0,o.kt)("td",{parentName:"tr",align:null},"The input to compute the shared secret, including the local key reference and remote key details.")))),(0,o.kt)("b",null,"Returns:"),(0,o.kt)("p",null,"Promise","<","string",">"),(0,o.kt)("p",null,"a ",(0,o.kt)("inlineCode",{parentName:"p"},"Promise")," that resolves to a hex encoded shared secret"))}d.isMDXComponent=!0}}]);