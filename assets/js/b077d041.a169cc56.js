"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[93267],{3905:function(e,t,r){r.d(t,{Zo:function(){return a},kt:function(){return f}});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},s=Object.keys(e);for(i=0;i<s.length;i++)r=s[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)r=s[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=i.createContext({}),u=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},a=function(e){var t=u(e.components);return i.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,a=o(e,["components","mdxType","originalType","parentName"]),p=u(r),m=n,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||s;return r?i.createElement(f,c(c({ref:t},a),{},{components:r})):i.createElement(f,c({ref:t},a))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,c=new Array(s);c[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:n,c[1]=o;for(var u=2;u<s;u++)c[u]=r[u];return i.createElement.apply(null,c)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},21449:function(e,t,r){r.r(t),r.d(t,{assets:function(){return a},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return p}});var i=r(87462),n=r(63366),s=(r(67294),r(3905)),c=["components"],o={id:"selective-disclosure.iselectivedisclosurerequest.claims",title:"ISelectiveDisclosureRequest.claims property",hide_title:!0},l=void 0,u={unversionedId:"api/selective-disclosure.iselectivedisclosurerequest.claims",id:"api/selective-disclosure.iselectivedisclosurerequest.claims",title:"ISelectiveDisclosureRequest.claims property",description:"ISelectiveDisclosureRequest.claims property",source:"@site/docs/api/selective-disclosure.iselectivedisclosurerequest.claims.md",sourceDirName:"api",slug:"/api/selective-disclosure.iselectivedisclosurerequest.claims",permalink:"/docs/api/selective-disclosure.iselectivedisclosurerequest.claims",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/selective-disclosure.iselectivedisclosurerequest.claims.md",tags:[],version:"current",frontMatter:{id:"selective-disclosure.iselectivedisclosurerequest.claims",title:"ISelectiveDisclosureRequest.claims property",hide_title:!0}},a={},p=[{value:"ISelectiveDisclosureRequest.claims property",id:"iselectivedisclosurerequestclaims-property",level:2}],d={toc:p},m="wrapper";function f(e){var t=e.components,r=(0,n.Z)(e,c);return(0,s.kt)(m,(0,i.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"iselectivedisclosurerequestclaims-property"},"ISelectiveDisclosureRequest.claims property"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,s.kt)("p",null,"A list of claims that are being requested"),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},"claims: ICredentialRequestInput[];\n")))}f.isMDXComponent=!0}}]);