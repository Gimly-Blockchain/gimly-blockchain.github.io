"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[16499],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return y}});var i=t(67294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function d(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function a(e,r){if(null==e)return{};var t,i,n=function(e,r){if(null==e)return{};var t,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var c=i.createContext({}),s=function(e){var r=i.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):d(d({},r),e)),t},l=function(e){var r=s(e.components);return i.createElement(c.Provider,{value:r},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},v=i.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=s(t),v=n,y=u["".concat(c,".").concat(v)]||u[v]||p[v]||o;return t?i.createElement(y,d(d({ref:r},l),{},{components:t})):i.createElement(y,d({ref:r},l))}));function y(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,d=new Array(o);d[0]=v;var a={};for(var c in r)hasOwnProperty.call(r,c)&&(a[c]=r[c]);a.originalType=e,a[u]="string"==typeof e?e:n,d[1]=a;for(var s=2;s<o;s++)d[s]=t[s];return i.createElement.apply(null,d)}return i.createElement.apply(null,t)}v.displayName="MDXCreateElement"},35455:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return c},default:function(){return y},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return u}});var i=t(87462),n=t(63366),o=(t(67294),t(3905)),d=["components"],a={id:"did-discovery.ididdiscoverydiscoverdidresult",title:"IDIDDiscoveryDiscoverDidResult interface",hide_title:!0},c=void 0,s={unversionedId:"api/did-discovery.ididdiscoverydiscoverdidresult",id:"api/did-discovery.ididdiscoverydiscoverdidresult",title:"IDIDDiscoveryDiscoverDidResult interface",description:"IDIDDiscoveryDiscoverDidResult interface",source:"@site/docs/api/did-discovery.ididdiscoverydiscoverdidresult.md",sourceDirName:"api",slug:"/api/did-discovery.ididdiscoverydiscoverdidresult",permalink:"/docs/api/did-discovery.ididdiscoverydiscoverdidresult",draft:!1,editUrl:"https://github.com/uport-project/gimly-website/edit/main/docs/api/did-discovery.ididdiscoverydiscoverdidresult.md",tags:[],version:"current",frontMatter:{id:"did-discovery.ididdiscoverydiscoverdidresult",title:"IDIDDiscoveryDiscoverDidResult interface",hide_title:!0}},l={},u=[{value:"IDIDDiscoveryDiscoverDidResult interface",id:"ididdiscoverydiscoverdidresult-interface",level:2},{value:"Properties",id:"properties",level:2}],p={toc:u},v="wrapper";function y(e){var r=e.components,t=(0,n.Z)(e,d);return(0,o.kt)(v,(0,i.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"ididdiscoverydiscoverdidresult-interface"},"IDIDDiscoveryDiscoverDidResult interface"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,o.kt)("p",null,"DID Discovery results."),(0,o.kt)("p",null,"This API may change without a BREAKING CHANGE notice."),(0,o.kt)("b",null,"Signature:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"export interface IDIDDiscoveryDiscoverDidResult extends Partial<IDIDDiscoveryDiscoverDidArgs>\n")),(0,o.kt)("b",null,"Extends:")," Partial<[IDIDDiscoveryDiscoverDidArgs](/docs/api/did-discovery.ididdiscoverydiscoverdidargs)>",(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Property"),(0,o.kt)("th",{parentName:"tr",align:null},"Modifiers"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/did-discovery.ididdiscoverydiscoverdidresult.errors"},"errors?")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},"Record","<","string, string",">"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("b",null,(0,o.kt)("i",null,"(BETA)"))," ",(0,o.kt)("i",null,"(Optional)")," A record of encountered errors")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/did-discovery.ididdiscoverydiscoverdidresult.results"},"results")),(0,o.kt)("td",{parentName:"tr",align:null}),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/api/did-discovery.ididdiscoveryproviderresult"},"IDIDDiscoveryProviderResult"),"[","]"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("b",null,(0,o.kt)("i",null,"(BETA)"))," List of discovery results from different providers")))))}y.isMDXComponent=!0}}]);