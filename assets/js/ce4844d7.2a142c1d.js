"use strict";(self.webpackChunkgimly_site_docs=self.webpackChunkgimly_site_docs||[]).push([[46280],{3905:function(n,t,e){e.d(t,{Zo:function(){return d},kt:function(){return m}});var r=e(67294);function i(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function s(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function p(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?s(Object(e),!0).forEach((function(t){i(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):s(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function g(n,t){if(null==n)return{};var e,r,i=function(n,t){if(null==n)return{};var e,r,i={},s=Object.keys(n);for(r=0;r<s.length;r++)e=s[r],t.indexOf(e)>=0||(i[e]=n[e]);return i}(n,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(n);for(r=0;r<s.length;r++)e=s[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(i[e]=n[e])}return i}var o=r.createContext({}),a=function(n){var t=r.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):p(p({},t),n)),e},d=function(n){var t=a(n.components);return r.createElement(o.Provider,{value:t},n.children)},y="mdxType",c={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(n,t){var e=n.components,i=n.mdxType,s=n.originalType,o=n.parentName,d=g(n,["components","mdxType","originalType","parentName"]),y=a(e),u=i,m=y["".concat(o,".").concat(u)]||y[u]||c[u]||s;return e?r.createElement(m,p(p({ref:t},d),{},{components:e})):r.createElement(m,p({ref:t},d))}));function m(n,t){var e=arguments,i=t&&t.mdxType;if("string"==typeof n||i){var s=e.length,p=new Array(s);p[0]=u;var g={};for(var o in t)hasOwnProperty.call(t,o)&&(g[o]=t[o]);g.originalType=n,g[y]="string"==typeof n?n:i,p[1]=g;for(var a=2;a<s;a++)p[a]=e[a];return r.createElement.apply(null,p)}return r.createElement.apply(null,e)}u.displayName="MDXCreateElement"},31685:function(n,t,e){e.r(t),e.d(t,{assets:function(){return d},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return g},metadata:function(){return a},toc:function(){return y}});var r=e(87462),i=e(63366),s=(e(67294),e(3905)),p=["components"],g={id:"data-store.datastoreorm.schema",title:"DataStoreORM.schema property",hide_title:!0},o=void 0,a={unversionedId:"api/data-store.datastoreorm.schema",id:"api/data-store.datastoreorm.schema",title:"DataStoreORM.schema property",description:"DataStoreORM.schema property",source:"@site/docs/api/data-store.datastoreorm.schema.md",sourceDirName:"api",slug:"/api/data-store.datastoreorm.schema",permalink:"/docs/api/data-store.datastoreorm.schema",draft:!1,tags:[],version:"current",frontMatter:{id:"data-store.datastoreorm.schema",title:"DataStoreORM.schema property",hide_title:!0}},d={},y=[{value:"DataStoreORM.schema property",id:"datastoreormschema-property",level:2}],c={toc:y},u="wrapper";function m(n){var t=n.components,e=(0,i.Z)(n,p);return(0,s.kt)(u,(0,r.Z)({},c,e,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"datastoreormschema-property"},"DataStoreORM.schema property"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"This API is provided as a preview for developers and may change based on feedback that we receive. Do not use this API in a production environment.")),(0,s.kt)("b",null,"Signature:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript"},'readonly schema: {\n        components: {\n            schemas: {\n                FindIdentifiersArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                "FindArgs-TIdentifiersColumns": {\n                    type: string;\n                    properties: {\n                        where: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        order: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        skip: {\n                            type: string;\n                            description: string;\n                        };\n                        take: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                "Where-TIdentifiersColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        value: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        not: {\n                            type: string;\n                        };\n                        op: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TIdentifiersColumns: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                    deprecated: string;\n                };\n                "Order-TIdentifiersColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        direction: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                PartialIdentifier: {\n                    type: string;\n                    properties: {\n                        did: {\n                            type: string;\n                            description: string;\n                        };\n                        alias: {\n                            type: string;\n                            description: string;\n                        };\n                        provider: {\n                            type: string;\n                            description: string;\n                        };\n                        controllerKeyId: {\n                            type: string;\n                            description: string;\n                        };\n                        keys: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        services: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                IKey: {\n                    type: string;\n                    properties: {\n                        kid: {\n                            type: string;\n                            description: string;\n                        };\n                        kms: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            $ref: string;\n                            description: string;\n                        };\n                        publicKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        privateKeyHex: {\n                            type: string;\n                            description: string;\n                        };\n                        meta: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                            } | {\n                                type: string;\n                                $ref?: undefined;\n                            })[];\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TKeyType: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                KeyMetadata: {\n                    type: string;\n                    properties: {\n                        algorithms: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                    };\n                    description: string;\n                };\n                IService: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        serviceEndpoint: {\n                            anyOf: ({\n                                $ref: string;\n                                type?: undefined;\n                                items?: undefined;\n                            } | {\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                                $ref?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        description: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IServiceEndpoint: {\n                    anyOf: {\n                        type: string;\n                    }[];\n                    description: string;\n                };\n                FindMessagesArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                "FindArgs-TMessageColumns": {\n                    type: string;\n                    properties: {\n                        where: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        order: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        skip: {\n                            type: string;\n                            description: string;\n                        };\n                        take: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                "Where-TMessageColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        value: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        not: {\n                            type: string;\n                        };\n                        op: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TMessageColumns: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                "Order-TMessageColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        direction: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessage: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                            description: string;\n                        };\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        createdAt: {\n                            type: string;\n                            description: string;\n                        };\n                        expiresAt: {\n                            type: string;\n                            description: string;\n                        };\n                        threadId: {\n                            type: string;\n                            description: string;\n                        };\n                        raw: {\n                            type: string;\n                            description: string;\n                        };\n                        data: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                            description: string;\n                        };\n                        replyTo: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                            description: string;\n                        };\n                        replyUrl: {\n                            type: string;\n                            description: string;\n                        };\n                        from: {\n                            type: string;\n                            description: string;\n                        };\n                        to: {\n                            type: string;\n                            description: string;\n                        };\n                        metaData: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    $ref: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                            description: string;\n                        };\n                        credentials: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        presentations: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        attachments: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        returnRoute: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMetaData: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                            description: string;\n                        };\n                        value: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiableCredential: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        issuer: {\n                            $ref: string;\n                        };\n                        credentialSubject: {\n                            $ref: string;\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        credentialStatus: {\n                            $ref: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                ProofType: {\n                    type: string;\n                    properties: {\n                        type: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                IssuerType: {\n                    anyOf: ({\n                        type: string;\n                        properties: {\n                            id: {\n                                type: string;\n                            };\n                        };\n                        required: string[];\n                    } | {\n                        type: string;\n                        properties?: undefined;\n                        required?: undefined;\n                    })[];\n                    description: string;\n                };\n                CredentialSubject: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                    };\n                    description: string;\n                };\n                ContextType: {\n                    anyOf: ({\n                        type: string;\n                        items?: undefined;\n                    } | {\n                        type: string;\n                        items: {\n                            anyOf: {\n                                type: string;\n                            }[];\n                        };\n                    })[];\n                    description: string;\n                };\n                CredentialStatusReference: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        type: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                VerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        proof: {\n                            $ref: string;\n                        };\n                        holder: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                        };\n                        type: {\n                            anyOf: ({\n                                type: string;\n                                items: {\n                                    type: string;\n                                };\n                            } | {\n                                type: string;\n                                items?: undefined;\n                            })[];\n                        };\n                        "@context": {\n                            $ref: string;\n                        };\n                        verifier: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        issuanceDate: {\n                            type: string;\n                        };\n                        expirationDate: {\n                            type: string;\n                        };\n                        id: {\n                            type: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                W3CVerifiableCredential: {\n                    anyOf: {\n                        $ref: string;\n                    }[];\n                    description: string;\n                };\n                CompactJWT: {\n                    type: string;\n                    description: string;\n                };\n                IMessageAttachment: {\n                    type: string;\n                    properties: {\n                        id: {\n                            type: string;\n                        };\n                        description: {\n                            type: string;\n                        };\n                        filename: {\n                            type: string;\n                        };\n                        media_type: {\n                            type: string;\n                        };\n                        format: {\n                            type: string;\n                        };\n                        lastmod_time: {\n                            type: string;\n                        };\n                        byte_count: {\n                            type: string;\n                        };\n                        data: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                IMessageAttachmentData: {\n                    type: string;\n                    properties: {\n                        jws: {};\n                        hash: {\n                            type: string;\n                        };\n                        links: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        base64: {\n                            type: string;\n                        };\n                        json: {};\n                    };\n                    description: string;\n                };\n                FindCredentialsArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                "FindArgs-TCredentialColumns": {\n                    type: string;\n                    properties: {\n                        where: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        order: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        skip: {\n                            type: string;\n                            description: string;\n                        };\n                        take: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                "Where-TCredentialColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        value: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        not: {\n                            type: string;\n                        };\n                        op: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TCredentialColumns: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                "Order-TCredentialColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        direction: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                UniqueVerifiableCredential: {\n                    type: string;\n                    properties: {\n                        hash: {\n                            type: string;\n                        };\n                        verifiableCredential: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                FindClaimsArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                "FindArgs-TClaimsColumns": {\n                    type: string;\n                    properties: {\n                        where: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        order: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        skip: {\n                            type: string;\n                            description: string;\n                        };\n                        take: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                "Where-TClaimsColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        value: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        not: {\n                            type: string;\n                        };\n                        op: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TClaimsColumns: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                "Order-TClaimsColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        direction: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                FindPresentationsArgs: {\n                    $ref: string;\n                    description: string;\n                };\n                "FindArgs-TPresentationColumns": {\n                    type: string;\n                    properties: {\n                        where: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        order: {\n                            type: string;\n                            items: {\n                                $ref: string;\n                            };\n                            description: string;\n                        };\n                        skip: {\n                            type: string;\n                            description: string;\n                        };\n                        take: {\n                            type: string;\n                            description: string;\n                        };\n                    };\n                    description: string;\n                };\n                "Where-TPresentationColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        value: {\n                            type: string;\n                            items: {\n                                type: string;\n                            };\n                        };\n                        not: {\n                            type: string;\n                        };\n                        op: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                TPresentationColumns: {\n                    type: string;\n                    enum: string[];\n                    description: string;\n                };\n                "Order-TPresentationColumns": {\n                    type: string;\n                    properties: {\n                        column: {\n                            $ref: string;\n                        };\n                        direction: {\n                            type: string;\n                            enum: string[];\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n                UniqueVerifiablePresentation: {\n                    type: string;\n                    properties: {\n                        hash: {\n                            type: string;\n                        };\n                        verifiablePresentation: {\n                            $ref: string;\n                        };\n                    };\n                    required: string[];\n                    description: string;\n                };\n            };\n            methods: {\n                dataStoreORMGetIdentifiers: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                dataStoreORMGetIdentifiersCount: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreORMGetMessages: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                dataStoreORMGetMessagesCount: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreORMGetVerifiableCredentials: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                dataStoreORMGetVerifiableCredentialsByClaims: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                dataStoreORMGetVerifiableCredentialsByClaimsCount: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreORMGetVerifiableCredentialsCount: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n                dataStoreORMGetVerifiablePresentations: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                        items: {\n                            $ref: string;\n                        };\n                    };\n                };\n                dataStoreORMGetVerifiablePresentationsCount: {\n                    description: string;\n                    arguments: {\n                        $ref: string;\n                    };\n                    returnType: {\n                        type: string;\n                    };\n                };\n            };\n        };\n    };\n')))}m.isMDXComponent=!0}}]);